{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAEII,MAAOF,GAFX,cAEdG,EAFc,gBAGGA,EAAUC,OAHb,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARrB,kBAYbM,GAZa,4CAAH,sDCERO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCLCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEvB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OArBAC,qBAAW,WAEPxB,EAAUC,GACLwB,MAAM,SAAAC,GAEHC,YAAY,WAIRJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEd,UAIZ,CAAEpB,IAIEqB,EDxB0BM,GAApBd,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QACrB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OACEoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEXzBiB,EAAgB,WAEzB,MAAoC1C,mBAAU,CAAE,cAAhD,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCACI,+CACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACAA,SAAWA,GACLA,Y,MClB9B8B,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.15389ba8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log( e.target.value );\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cat => [ inputValue, ...cat  ] );\r\n            setInputValue('');\r\n        }\r\n\r\n       // console.log( 'submit hecho' );\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n\r\n    \r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifts = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=hx8ngPDZJp5IJrMaO2FmzVL0Va3DyD1D`;\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n           id: img.id,\r\n           title: img.title,\r\n           url: img.images?.downsized_medium.url \r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem }  from './GifGridItem'\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs();\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n            { loading && <p>loading</p> }\r\n            <div className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                            key={ img.id } \r\n                            { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from '../helpers/getGifs'\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {  \r\n\r\n        getGifts( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( ()=> {\r\n                    \r\n                    //console.log(imgs);\r\n\r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n\r\n            });\r\n\r\n    }, [ category ]);\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( [ 'One Punch'] );\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories( [...categories, 'Hunter X Hunter'] );\r\n    //     setCategories( cat => [...categories, 'Hunter X Hunter'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory  setCategories={ setCategories } />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        category={ category }\r\n                        key={ category }\r\n                         />\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GiftExpertApp } from './GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />\n  ,document.getElementById('root')\n);\n\n"],"sourceRoot":""}